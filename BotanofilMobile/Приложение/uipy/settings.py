# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'settings.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Settings(object):
	def setupUi(self, Settings, data):
		Settings.setObjectName("Settings")
		Settings.resize(414, 370)
		self.tabWidget_water = QtWidgets.QTabWidget(Settings)
		self.tabWidget_water.setGeometry(QtCore.QRect(0, 10, 411, 311))
		self.tabWidget_water.setObjectName("tabWidget_water")
		self.water = QtWidgets.QWidget()
		self.water.setObjectName("water")
		self.layoutWidget = QtWidgets.QWidget(self.water)
		self.layoutWidget.setGeometry(QtCore.QRect(0, 0, 401, 281))
		self.layoutWidget.setObjectName("layoutWidget")
		self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
		self.verticalLayout.setContentsMargins(0, 0, 0, 0)
		self.verticalLayout.setObjectName("verticalLayout")
		self.horizontalLayout = QtWidgets.QHBoxLayout()
		self.horizontalLayout.setObjectName("horizontalLayout")
		self.label = QtWidgets.QLabel(self.layoutWidget)
		font = QtGui.QFont()
		font.setPointSize(13)
		self.label.setFont(font)
		self.label.setObjectName("label")
		self.horizontalLayout.addWidget(self.label)
		self.spinBox = QtWidgets.QSpinBox(self.layoutWidget)
		self.spinBox.setMinimum(-1)
		self.spinBox.setMaximum(100)
		self.spinBox.setObjectName("spinBox")
		self.horizontalLayout.addWidget(self.spinBox)
		self.verticalLayout.addLayout(self.horizontalLayout)
		self.label_2 = QtWidgets.QLabel(self.layoutWidget)
		font = QtGui.QFont()
		font.setPointSize(13)
		self.label_2.setFont(font)
		self.label_2.setObjectName("label_2")
		self.verticalLayout.addWidget(self.label_2)
		self.tableWidget = QtWidgets.QTableWidget(self.layoutWidget)
		self.tableWidget.setObjectName("tableWidget")
		self.tableWidget.setColumnCount(2)
		self.tableWidget.setRowCount(1)
		item = QtWidgets.QTableWidgetItem()
		self.tableWidget.setVerticalHeaderItem(0, item)
		item = QtWidgets.QTableWidgetItem()
		self.tableWidget.setHorizontalHeaderItem(0, item)
		item = QtWidgets.QTableWidgetItem()
		self.tableWidget.setHorizontalHeaderItem(1, item)
		self.verticalLayout.addWidget(self.tableWidget)
		self.tabWidget_water.addTab(self.water, "")
		self.light = QtWidgets.QWidget()
		self.light.setObjectName("light")
		self.layoutWidget1 = QtWidgets.QWidget(self.light)
		self.layoutWidget1.setGeometry(QtCore.QRect(0, 0, 401, 281))
		self.layoutWidget1.setObjectName("layoutWidget1")
		self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget1)
		self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
		self.verticalLayout_2.setObjectName("verticalLayout_2")
		self.label_3 = QtWidgets.QLabel(self.layoutWidget1)
		font = QtGui.QFont()
		font.setPointSize(13)
		self.label_3.setFont(font)
		self.label_3.setObjectName("label_3")
		self.verticalLayout_2.addWidget(self.label_3)
		self.tableWidget_light = QtWidgets.QTableWidget(self.layoutWidget1)
		self.tableWidget_light.setObjectName("tableWidget_light")
		self.tableWidget_light.setColumnCount(2)
		self.tableWidget_light.setRowCount(1)
		item = QtWidgets.QTableWidgetItem()
		self.tableWidget_light.setVerticalHeaderItem(0, item)
		item = QtWidgets.QTableWidgetItem()
		self.tableWidget_light.setHorizontalHeaderItem(0, item)
		item = QtWidgets.QTableWidgetItem()
		self.tableWidget_light.setHorizontalHeaderItem(1, item)
		self.verticalLayout_2.addWidget(self.tableWidget_light)
		self.tabWidget_water.addTab(self.light, "")
		self.saveButton = QtWidgets.QPushButton(Settings)
		self.saveButton.setGeometry(QtCore.QRect(294, 325, 111, 41))
		font = QtGui.QFont()
		font.setPointSize(13)
		self.saveButton.setFont(font)
		self.saveButton.setObjectName("saveButton")
		self.cancelButton = QtWidgets.QPushButton(Settings)
		self.cancelButton.setGeometry(QtCore.QRect(10, 325, 111, 41))
		font = QtGui.QFont()
		font.setPointSize(13)
		self.cancelButton.setFont(font)
		self.cancelButton.setObjectName("cancelButton")

		self.tableWidget.cellChanged.connect(lambda: self.table_changed(self.tableWidget))
		self.tableWidget_light.cellChanged.connect(lambda: self.table_changed(self.tableWidget_light))
		self.saveButton.clicked.connect(lambda: self.save())
		self.cancelButton.clicked.connect(lambda: self.cancel())

		self.spinBox.setValue(data['Water']['value'])
		self.set_table_from_dictionary(self.tableWidget, data['Water']['time'])
		self.set_table_from_dictionary(self.tableWidget_light, data['Light'])

		self.retranslateUi(Settings)
		self.tabWidget_water.setCurrentIndex(0)
		QtCore.QMetaObject.connectSlotsByName(Settings)

	def retranslateUi(self, Settings):
		_translate = QtCore.QCoreApplication.translate
		Settings.setWindowTitle(_translate("Settings", "Настройки"))
		self.label.setText(_translate("Settings", "Вкл полив при влажности почвы меньше:"))
		self.label_2.setText(_translate("Settings", "Вкл полив по времени:"))
		item = self.tableWidget.verticalHeaderItem(0)
		item.setText(_translate("Settings", "1"))
		item = self.tableWidget.horizontalHeaderItem(0)
		item.setText(_translate("Settings", "С"))
		item = self.tableWidget.horizontalHeaderItem(1)
		item.setText(_translate("Settings", "До"))
		self.tabWidget_water.setTabText(self.tabWidget_water.indexOf(self.water), _translate("Settings", "Полив"))
		self.label_3.setText(_translate("Settings", "Вкл полив по времени:"))
		item = self.tableWidget_light.verticalHeaderItem(0)
		item.setText(_translate("Settings", "1"))
		item = self.tableWidget_light.horizontalHeaderItem(0)
		item.setText(_translate("Settings", "С"))
		item = self.tableWidget_light.horizontalHeaderItem(1)
		item.setText(_translate("Settings", "До"))
		self.tabWidget_water.setTabText(self.tabWidget_water.indexOf(self.light), _translate("Settings", "Свет"))
		self.saveButton.setText(_translate("Settings", "Сохранить"))
		self.cancelButton.setText(_translate("Settings", "Отмена"))
	
	def table_check_row_for_emptiness(self, tableWidget, row):
		first = False
		second = False

		if tableWidget.item(row, 0) == None or tableWidget.item(row, 0).text() == '': # Если первый столбец пустой то first = true
			first = True
		if tableWidget.item(row, 1) == None or tableWidget.item(row, 1).text() == '': # Если второй столбец пустой то second = true
			second = True
			
		if first and second: # Если оба столбца пустыне, то возвращяю True
			return True
		else:	# иначе False
			return False

	def table_changed(self, tableWidget):
		row_count = tableWidget.rowCount()

		if self.table_check_row_for_emptiness(tableWidget, row_count-1):
			if self.table_check_row_for_emptiness(tableWidget, row_count-2):
				tableWidget.removeRow(row_count-1)
		else:
			tableWidget.setRowCount(row_count+1)
	
	def set_table_from_dictionary(self, tableWidget, dic: dict):
		row_count = len(dic)

		if row_count > 0:
			tableWidget.setRowCount(row_count)
			
			row = 0
			for i in dic.keys():
				item = QtWidgets.QTableWidgetItem()
				item.setText(str(dic[i]['From']))
				tableWidget.setItem(row, 0, item)

				item = QtWidgets.QTableWidgetItem()
				item.setText(str(dic[i]['To']))
				tableWidget.setItem(row, 1, item)

				row += 1
		else:
			tableWidget.setRowCount(1)
	
	def cancel(self):
		pass
	
	def save(self):
		water = self.get_data_from_table(self.tableWidget)
		light = self.get_data_from_table(self.tableWidget_light)

		json_ = {'Water': {'time': water, 'value': self.spinBox.value()}, 'Light': light}

	def get_data_from_table(self, tableWidget):
		get = {}

		row_count = tableWidget.rowCount()
		if self.table_check_row_for_emptiness(tableWidget, row_count-1):
			tableWidget.removeRow(row_count-1)
	
		i = -1
		for row in range(tableWidget.rowCount()):
			i += 1

			From = tableWidget.item(row, 0)
			To = tableWidget.item(row, 1)

			if From == None:
				From = ''
			else:
				From = From.text()
			
			if To == None:
				To = ''
			else:
				To = To.text()

			get[str(i)] = {
				'From': From,
				'To': To
			}
		
		self.table_changed(tableWidget)
		return get


if __name__ == "__main__":
	import sys
	app = QtWidgets.QApplication(sys.argv)
	Settings = QtWidgets.QWidget()
	ui = Ui_Settings()
	ui.setupUi(Settings)
	Settings.show()
	sys.exit(app.exec_())
